apiVersion: v1
kind: Pod
metadata:
  name: nginx-deployment-7485c96c7d-ftjdg
  generateName: nginx-deployment-7485c96c7d-
  namespace: default
  uid: 6f663230-c937-447c-8844-aa8cc49a8be3
  resourceVersion: '581144'
  creationTimestamp: '2023-09-28T14:25:41Z'
  labels:
    app: nginx
    pod-template-hash: 7485c96c7d
  annotations:
    cni.projectcalico.org/containerID: 7990d1b26656ca58e5dc28715037c99de32f85009a6d65ad0a83176e46aa4a5d
    cni.projectcalico.org/podIP: 192.168.0.232/32
    cni.projectcalico.org/podIPs: 192.168.0.232/32
  ownerReferences:
    - apiVersion: apps/v1
      kind: ReplicaSet
      name: nginx-deployment-7485c96c7d
      uid: 50124bc6-4d6f-4da6-b1ba-2828cbbd5cb4
      controller: true
      blockOwnerDeletion: true
  managedFields:
    - manager: kube-controller-manager
      operation: Update
      apiVersion: v1
      time: '2023-09-28T14:25:41Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:generateName: {}
          f:labels:
            .: {}
            f:app: {}
            f:pod-template-hash: {}
          f:ownerReferences:
            .: {}
            k:{"uid":"50124bc6-4d6f-4da6-b1ba-2828cbbd5cb4"}: {}
        f:spec:
          f:containers:
            k:{"name":"nginx"}:
              .: {}
              f:image: {}
              f:imagePullPolicy: {}
              f:name: {}
              f:resources:
                .: {}
                f:limits:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
                f:requests:
                  .: {}
                  f:cpu: {}
                  f:memory: {}
              f:terminationMessagePath: {}
              f:terminationMessagePolicy: {}
          f:dnsPolicy: {}
          f:enableServiceLinks: {}
          f:restartPolicy: {}
          f:schedulerName: {}
          f:securityContext: {}
          f:terminationGracePeriodSeconds: {}
    - manager: calico
      operation: Update
      apiVersion: v1
      time: '2023-09-28T14:25:45Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:metadata:
          f:annotations:
            .: {}
            f:cni.projectcalico.org/containerID: {}
            f:cni.projectcalico.org/podIP: {}
            f:cni.projectcalico.org/podIPs: {}
      subresource: status
    - manager: kubelet
      operation: Update
      apiVersion: v1
      time: '2023-09-28T14:25:53Z'
      fieldsType: FieldsV1
      fieldsV1:
        f:status:
          f:conditions:
            k:{"type":"ContainersReady"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Initialized"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
            k:{"type":"Ready"}:
              .: {}
              f:lastProbeTime: {}
              f:lastTransitionTime: {}
              f:status: {}
              f:type: {}
          f:containerStatuses: {}
          f:hostIP: {}
          f:phase: {}
          f:podIP: {}
          f:podIPs:
            .: {}
            k:{"ip":"192.168.0.232"}:
              .: {}
              f:ip: {}
          f:startTime: {}
      subresource: status
  selfLink: /api/v1/namespaces/default/pods/nginx-deployment-7485c96c7d-ftjdg
status:    # 当前真实状态
  phase: Running            # 当前处于生命周期的某一个阶段：Pending/Running/Successed/Failed/Unknown
  conditions:                # 代表Pod过去的经历，一些变化的事件，一些状态的变动
    - type: Initialized
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2023-09-28T14:25:41Z'
    - type: Ready
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2023-09-28T14:25:52Z'
    - type: ContainersReady
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2023-09-28T14:25:52Z'
    - type: PodScheduled
      status: 'True'
      lastProbeTime: null
      lastTransitionTime: '2023-09-28T14:25:41Z'
  hostIP: 172.18.27.134        # Pod所在主机IP
  podIP: 192.168.0.232         # Pod的IP
  podIPs:
    - ip: 192.168.0.232
  startTime: '2023-09-28T14:25:41Z'
  containerStatuses:
    - name: nginx
      state:
        running:
          startedAt: '2023-09-28T14:25:50Z'
      lastState: {}
      ready: true
      restartCount: 0
      image: docker.io/library/nginx:latest
      imageID: >-
        docker.io/library/nginx@sha256:32da30332506740a2f7c34d5dc70467b7f14ec67d912703568daff790ab3f755
      containerID: >-
        containerd://ba8283c7166455be69e1f00942f15dbb1f21b372932e4fb9e4c576dad4b87177
      started: true
  qosClass: Burstable    # Qos class
spec:
  volumes:
    - name: kube-api-access-tmg5m
      projected:
        sources:
          - serviceAccountToken:
              expirationSeconds: 3607
              path: token
          - configMap:
              name: kube-root-ca.crt
              items:
                - key: ca.crt
                  path: ca.crt
          - downwardAPI:
              items:
                - path: namespace
                  fieldRef:
                    apiVersion: v1
                    fieldPath: metadata.namespace
        defaultMode: 420
  containers:
    - name: nginx
      image: nginx
      resources:
        limits:
          cpu: 200m
          memory: 1Gi
        requests:
          cpu: 100m
          memory: 500Mi
      volumeMounts:
        - name: kube-api-access-tmg5m
          readOnly: true
          mountPath: /var/run/secrets/kubernetes.io/serviceaccount
      terminationMessagePath: /dev/termination-log
      terminationMessagePolicy: File
      imagePullPolicy: IfNotPresent
  restartPolicy: Always
  terminationGracePeriodSeconds: 30
  dnsPolicy: ClusterFirst
  serviceAccountName: default
  serviceAccount: default
  nodeName: wsl-ubuntu20.04
  securityContext: {}
  schedulerName: default-scheduler
  tolerations:  # 如果一个节点的taint，变成了not-ready、unreachable，那么本Pod最多可以忍受300s, 等待节点状态恢复，否则300s后，请驱逐我
    - key: node.kubernetes.io/not-ready
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
    - key: node.kubernetes.io/unreachable
      operator: Exists
      effect: NoExecute
      tolerationSeconds: 300
  priority: 0
  enableServiceLinks: true
  preemptionPolicy: PreemptLowerPriority